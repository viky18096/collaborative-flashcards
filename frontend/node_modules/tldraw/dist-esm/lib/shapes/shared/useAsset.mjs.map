{
  "version": 3,
  "sources": ["../../../../src/lib/shapes/shared/useAsset.ts"],
  "sourcesContent": ["import { TLAssetId, TLShapeId, useEditor, useValue } from '@tldraw/editor'\nimport { useEffect, useRef, useState } from 'react'\n\n/**\n * This is a handy helper hook that resolves an asset to a URL for a given shape. It takes care of fetching the asset.\n * This is used in particular for high-resolution images when you want lower and higher resolution depending\n * on the context.\n *\n * @public\n */\nexport function useAsset(shapeId: TLShapeId, assetId: TLAssetId | null, width: number) {\n\tconst editor = useEditor()\n\tconst [url, setUrl] = useState<string | null>(null)\n\tconst asset = assetId ? editor.getAsset(assetId) : null\n\tconst culledShapes = editor.getCulledShapes()\n\tconst isCulled = culledShapes.has(shapeId)\n\tconst didAlreadyResolve = useRef(false)\n\n\tuseEffect(() => {\n\t\tif (url) didAlreadyResolve.current = true\n\t}, [url])\n\n\tconst shapeScale = asset && 'w' in asset.props ? width / asset.props.w : 1\n\t// We debounce the zoom level to reduce the number of times we fetch a new image and,\n\t// more importantly, to not cause zooming in and out to feel janky.\n\tconst screenScale = useValue('zoom level', () => editor.getZoomLevel() * shapeScale, [\n\t\teditor,\n\t\tshapeScale,\n\t])\n\n\tuseEffect(() => {\n\t\tif (isCulled) return\n\n\t\tlet isCancelled = false\n\t\tconst timer = editor.timers.setTimeout(\n\t\t\tasync () => {\n\t\t\t\tconst resolvedUrl = await editor.resolveAssetUrl(assetId, {\n\t\t\t\t\tscreenScale,\n\t\t\t\t})\n\t\t\t\tif (!isCancelled) setUrl(resolvedUrl)\n\t\t\t},\n\t\t\tdidAlreadyResolve.current ? 500 : 0\n\t\t)\n\n\t\treturn () => {\n\t\t\tclearTimeout(timer)\n\t\t\tisCancelled = true\n\t\t}\n\t}, [assetId, asset?.props.src, isCulled, screenScale, editor])\n\n\treturn { asset, url }\n}\n"],
  "mappings": "AAAA,SAA+B,WAAW,gBAAgB;AAC1D,SAAS,WAAW,QAAQ,gBAAgB;AASrC,SAAS,SAAS,SAAoB,SAA2B,OAAe;AACtF,QAAM,SAAS,UAAU;AACzB,QAAM,CAAC,KAAK,MAAM,IAAI,SAAwB,IAAI;AAClD,QAAM,QAAQ,UAAU,OAAO,SAAS,OAAO,IAAI;AACnD,QAAM,eAAe,OAAO,gBAAgB;AAC5C,QAAM,WAAW,aAAa,IAAI,OAAO;AACzC,QAAM,oBAAoB,OAAO,KAAK;AAEtC,YAAU,MAAM;AACf,QAAI,IAAK,mBAAkB,UAAU;AAAA,EACtC,GAAG,CAAC,GAAG,CAAC;AAER,QAAM,aAAa,SAAS,OAAO,MAAM,QAAQ,QAAQ,MAAM,MAAM,IAAI;AAGzE,QAAM,cAAc,SAAS,cAAc,MAAM,OAAO,aAAa,IAAI,YAAY;AAAA,IACpF;AAAA,IACA;AAAA,EACD,CAAC;AAED,YAAU,MAAM;AACf,QAAI,SAAU;AAEd,QAAI,cAAc;AAClB,UAAM,QAAQ,OAAO,OAAO;AAAA,MAC3B,YAAY;AACX,cAAM,cAAc,MAAM,OAAO,gBAAgB,SAAS;AAAA,UACzD;AAAA,QACD,CAAC;AACD,YAAI,CAAC,YAAa,QAAO,WAAW;AAAA,MACrC;AAAA,MACA,kBAAkB,UAAU,MAAM;AAAA,IACnC;AAEA,WAAO,MAAM;AACZ,mBAAa,KAAK;AAClB,oBAAc;AAAA,IACf;AAAA,EACD,GAAG,CAAC,SAAS,OAAO,MAAM,KAAK,UAAU,aAAa,MAAM,CAAC;AAE7D,SAAO,EAAE,OAAO,IAAI;AACrB;",
  "names": []
}
